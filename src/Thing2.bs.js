// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Realm = require("./Realm.bs.js");
var React = require("react");
var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");

var Html = Curry._1(Realm.App[/* Html */0], /* module */[]);

function init() {
  return /* record */[
          /* count */0,
          /* show */true
        ];
}

function update(msg, model) {
  if (typeof msg === "number") {
    switch (msg) {
      case 0 : 
          return /* record */[
                  /* count */model[/* count */0] + 1 | 0,
                  /* show */model[/* show */1]
                ];
      case 1 : 
          return /* record */[
                  /* count */Caml_int32.imul(model[/* count */0], model[/* count */0]),
                  /* show */model[/* show */1]
                ];
      case 2 : 
          return /* record */[
                  /* count */model[/* count */0],
                  /* show */!model[/* show */1]
                ];
      
    }
  } else {
    console.log(msg[0]);
    return model;
  }
}

var FooHtml = Curry._1(Realm.App[/* Html */0], /* module */[]);

var partial_arg = Realm.App[/* map */2];

function wrapFooMsg(param, param$1) {
  return partial_arg((function (s) {
                return /* Foo */[s];
              }), param, param$1);
}

var fooView = Curry._2(FooHtml[/* button */4], /* :: */[
      Curry._1(FooHtml[/* onClick */0], "foo"),
      /* [] */0
    ], /* :: */[
      Curry._1(FooHtml[/* text */2], "Set foo"),
      /* [] */0
    ]);

function view(greeting, model) {
  var message = "You've clicked this " + (String(model[/* count */0]) + " times(s)");
  var match = model[/* show */1];
  return Curry._2(Html[/* div */3], /* [] */0, /* :: */[
              Curry._2(Html[/* button */4], /* :: */[
                    Curry._1(Html[/* onClick */0], /* Click */0),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html[/* text */2], message),
                    /* [] */0
                  ]),
              /* :: */[
                Curry._1(Html[/* fromReact */5], (function (dispatch) {
                        return React.createElement("button", {
                                    onClick: (function () {
                                        return Curry._1(dispatch, /* Square */1);
                                      })
                                  }, "Square count");
                      })),
                /* :: */[
                  Curry._2(Html[/* button */4], /* :: */[
                        Curry._1(Html[/* onClick */0], /* Toggle */2),
                        /* [] */0
                      ], /* :: */[
                        Curry._1(Html[/* text */2], "Toggle greeting"),
                        /* [] */0
                      ]),
                  /* :: */[
                    (function (param) {
                        return wrapFooMsg(fooView, param);
                      }),
                    /* :: */[
                      match ? Curry._1(Html[/* text */2], greeting) : Html[/* null */1],
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]);
}

exports.Html = Html;
exports.init = init;
exports.update = update;
exports.FooHtml = FooHtml;
exports.wrapFooMsg = wrapFooMsg;
exports.fooView = fooView;
exports.view = view;
/* Html Not a pure module */
