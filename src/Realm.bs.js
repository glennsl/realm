// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReactDOMRe = require("reason-react/src/ReactDOMRe.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function mount(at, init, update, view) {
  var model = [Curry._1(init, /* () */0)];
  var dispatch = function (msg) {
    model[0] = Curry._2(update, msg, model[0]);
    var component = Curry._2(view, model[0], dispatch);
    return ReactDOMRe.renderToElementWithId(component, at);
  };
  var component = Curry._2(view, model[0], dispatch);
  return ReactDOMRe.renderToElementWithId(component, at);
}

function map(f, element, dispatch) {
  return Curry._1(element, (function (msg) {
                return Curry._1(dispatch, Curry._1(f, msg));
              }));
}

function App_000() {
  var onClick = function (msg) {
    return /* Event */Block.__(1, [
              "onClick",
              msg
            ]);
  };
  var _element = function (elementName, props, children, dispatch) {
    var props$1 = List.fold_left((function (props, param) {
            if (param.tag) {
              var msg = param[1];
              props[param[0]] = (function () {
                  return Curry._1(dispatch, msg);
                });
              return props;
            } else {
              props[param[0]] = param[1];
              return props;
            }
          }), { }, props);
    return ReasonReact.createDomElement(elementName, props$1, $$Array.of_list(List.map((function (el) {
                          return Curry._1(el, dispatch);
                        }), children)));
  };
  var $$null$1 = function () {
    return null;
  };
  var text = function (text$1, _) {
    return text$1;
  };
  var div = function (param, param$1, param$2) {
    return _element("div", param, param$1, param$2);
  };
  var button = function (param, param$1, param$2) {
    return _element("button", param, param$1, param$2);
  };
  var fromReact = function (f) {
    return f;
  };
  return [
          onClick,
          $$null$1,
          text,
          div,
          button,
          fromReact
        ];
}

var App = /* module */[
  App_000,
  /* mount */mount,
  /* map */map
];

exports.App = App;
/* ReactDOMRe Not a pure module */
