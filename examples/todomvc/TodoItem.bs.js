// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Model = require("./Model.bs.js");
var Actions = require("./Actions.bs.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Realm__Core = require("../../src/core/Realm__Core.bs.js");
var RealmNoUpdate = require("../../src/RealmNoUpdate.bs.js");
var TodoTextInput = require("./TodoTextInput.bs.js");

function editTextInput(initialValue) {
  return Realm__Core.$pipe$great((function (param) {
                return TodoTextInput.view("edit", undefined, initialValue, param);
              }), (function (param, param$1) {
                return RealmNoUpdate.map((function (param) {
                              return "";
                            }), (function (model, name) {
                              return /* record */[
                                      /* entries */Pervasives.$at(model[/* entries */0], /* :: */[
                                            Model.Todo[/* make */1](name),
                                            /* [] */0
                                          ]),
                                      /* visibility */model[/* visibility */1]
                                    ];
                            }), param, param$1);
              }));
}

function view(entry) {
  var match = entry[/* editing */3];
  var func = Model.Html[/* input */17];
  var arg = /* :: */[
    Curry._1(Model.Html[/* Attr */0][/* onChange */6], Actions.toggle(entry)),
    /* [] */0
  ];
  var arg_001 = entry[/* completed */2];
  var arg$1 = /* `Checkbox */[
    111644259,
    arg_001
  ];
  var arg$2 = function (param, param$1) {
    return Curry._5(func, param, param$1, "toggle", arg, arg$1);
  };
  var match$1 = entry[/* editing */3];
  return Curry._4(Model.Html[/* li */12], undefined, match ? "editing" : "", undefined, /* :: */[
              Curry._4(Model.Html[/* div */6], undefined, "view", undefined, /* :: */[
                    (function (eta) {
                        return Curry._1(arg$2(undefined, undefined), eta);
                      }),
                    /* :: */[
                      Curry._5(Model.Html[/* label */16], undefined, /* :: */[
                            Curry._1(Model.Html[/* Attr */0][/* onDoubleClick */5], Actions.edit(entry, true)),
                            /* [] */0
                          ], undefined, undefined, /* :: */[
                            Curry._1(Model.Html[/* text */3], entry[/* title */1]),
                            /* [] */0
                          ]),
                      /* :: */[
                        Curry._4(Model.Html[/* button */4], undefined, "destroy", /* :: */[
                              Curry._1(Model.Html[/* Attr */0][/* onClick */4], Actions.remove(entry)),
                              /* [] */0
                            ], /* [] */0),
                        /* [] */0
                      ]
                    ]
                  ]),
              /* :: */[
                match$1 ? editTextInput(entry[/* title */1]) : Model.Html[/* null */2],
                /* [] */0
              ]
            ]);
}

exports.editTextInput = editTextInput;
exports.view = view;
/* Model Not a pure module */
