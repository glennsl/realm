// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Realm = require("../src/Realm.bs.js");
var Realm__Core = require("../src/core/Realm__Core.bs.js");
var Core__String = require("../src/core/Core__String.bs.js");

function init(param) {
  return Realm.Task[/* const */1](/* record */[/* count */0]);
}

var click = Realm.Effect[/* update */2]((function (model) {
        return /* record */[/* count */model[/* count */0] + 1 | 0];
      }));

var Html = Realm.MakeHtml(/* module */[]);

function view(model) {
  var message = "You've clicked this " + (Core__String.fromInt(model[/* count */0]) + " times(s)");
  return Curry._4(Html[/* div */6], undefined, undefined, undefined, /* :: */[
              Curry._4(Html[/* button */4], undefined, undefined, /* :: */[
                    Curry._1(Html[/* Attr */0][/* onClick */4], click),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html[/* text */3], message),
                    /* [] */0
                  ]),
              /* [] */0
            ]);
}

var Clicker = /* module */[
  /* init */init,
  /* click */click,
  /* Html */Html,
  /* view */view
];

function init$1(param) {
  return Realm.Task[/* const */1](/* record */[
              /* show */true,
              /* n */0
            ]);
}

var toggle = Realm.Effect[/* do_ */3]((function (param) {
        var partial_arg = Realm.Task[/* randomInt */6];
        return (function (param) {
            return partial_arg(0, 10, param);
          });
      }), (function (n, model) {
        return /* record */[
                /* show */!model[/* show */0],
                /* n */n
              ];
      }));

var Html$1 = Realm.MakeHtml(/* module */[]);

function view$1(greeting, model) {
  var match = model[/* show */0];
  return Curry._4(Html$1[/* div */6], undefined, undefined, undefined, /* :: */[
              Curry._4(Html$1[/* button */4], undefined, undefined, /* :: */[
                    Curry._1(Html$1[/* Attr */0][/* onClick */4], toggle),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html$1[/* text */3], "Toggle greeting " + Core__String.fromInt(model[/* n */1])),
                    /* [] */0
                  ]),
              /* :: */[
                match ? Curry._1(Html$1[/* text */3], greeting) : Html$1[/* null */2],
                /* [] */0
              ]
            ]);
}

var Toggler = /* module */[
  /* init */init$1,
  /* toggle */toggle,
  /* Html */Html$1,
  /* view */view$1
];

function init$2(param) {
  return Realm.Task[/* map2 */4]((function (clicker, toggler) {
                return /* record */[
                        /* clicker */clicker,
                        /* toggler */toggler
                      ];
              }), Realm.Task[/* const */1](/* record */[/* count */0]), Realm.Task[/* const */1](/* record */[
                  /* show */true,
                  /* n */0
                ]));
}

var Html$2 = Realm.MakeHtml(/* module */[]);

function clicker(model) {
  return Realm__Core.$pipe$great(view(model[/* clicker */0]), (function (param, param$1) {
                return Realm.map((function (model) {
                              return model[/* clicker */0];
                            }), (function (model, clickerModel) {
                              return /* record */[
                                      /* clicker */clickerModel,
                                      /* toggler */model[/* toggler */1]
                                    ];
                            }), param, param$1);
              }));
}

function toggler(greeting, model) {
  return Realm__Core.$pipe$great(view$1(greeting, model[/* toggler */1]), (function (param, param$1) {
                return Realm.map((function (model) {
                              return model[/* toggler */1];
                            }), (function (model, togglerModel) {
                              return /* record */[
                                      /* clicker */model[/* clicker */0],
                                      /* toggler */togglerModel
                                    ];
                            }), param, param$1);
              }));
}

var Components = /* module */[
  /* clicker */clicker,
  /* toggler */toggler
];

function view$2(greeting, model) {
  return Curry._4(Html$2[/* div */6], undefined, undefined, undefined, /* :: */[
              clicker(model),
              /* :: */[
                toggler(greeting, model),
                /* [] */0
              ]
            ]);
}

function mount(at) {
  return Realm.mountHtml(at)(init$2, undefined, undefined, (function (param) {
                return view$2("hello", param);
              }), /* () */0);
}

exports.Clicker = Clicker;
exports.Toggler = Toggler;
exports.init = init$2;
exports.Html = Html$2;
exports.Components = Components;
exports.view = view$2;
exports.mount = mount;
/* click Not a pure module */
