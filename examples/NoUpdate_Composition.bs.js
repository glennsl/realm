// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var RealmNoUpdate = require("../src/RealmNoUpdate.bs.js");

function init(param) {
  return /* record */[/* count */0];
}

var click = RealmNoUpdate.Cmd[/* make */0]((function (model) {
        return /* record */[/* count */model[/* count */0] + 1 | 0];
      }));

var Html = RealmNoUpdate.MakeHtml(/* module */[]);

function view(model) {
  var message = "You've clicked this " + (String(model[/* count */0]) + " times(s)");
  return Curry._4(Html[/* div */7], undefined, undefined, undefined, /* :: */[
              Curry._4(Html[/* button */5], undefined, undefined, /* :: */[
                    Curry._1(Html[/* onClick */0], click),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html[/* text */4], message),
                    /* [] */0
                  ]),
              /* [] */0
            ]);
}

var Clicker = /* module */[
  /* init */init,
  /* click */click,
  /* Html */Html,
  /* view */view
];

function init$1(param) {
  return /* record */[
          /* show */true,
          /* n */0
        ];
}

var partial_arg = RealmNoUpdate.Task[/* randomInt */3];

function partial_arg$1(param) {
  return partial_arg(0, 10, param);
}

var partial_arg$2 = RealmNoUpdate.Task[/* map */2];

var toggle = RealmNoUpdate.Cmd[/* fromTask */1]((function (param) {
        return partial_arg$2((function (n, m) {
                      return /* record */[
                              /* show */!m[/* show */0],
                              /* n */n
                            ];
                    }), partial_arg$1, param);
      }));

var Html$1 = RealmNoUpdate.MakeHtml(/* module */[]);

function view$1(greeting, model) {
  var match = model[/* show */0];
  return Curry._4(Html$1[/* div */7], undefined, undefined, undefined, /* :: */[
              Curry._4(Html$1[/* button */5], undefined, undefined, /* :: */[
                    Curry._1(Html$1[/* onClick */0], toggle),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html$1[/* text */4], "Toggle greeting " + String(model[/* n */1])),
                    /* [] */0
                  ]),
              /* :: */[
                match ? Curry._1(Html$1[/* text */4], greeting) : Html$1[/* null */3],
                /* [] */0
              ]
            ]);
}

var Toggler = /* module */[
  /* init */init$1,
  /* toggle */toggle,
  /* Html */Html$1,
  /* view */view$1
];

function init$2(param) {
  return /* record */[
          /* clicker : record */[/* count */0],
          /* toggler : record */[
            /* show */true,
            /* n */0
          ]
        ];
}

var Html$2 = RealmNoUpdate.MakeHtml(/* module */[]);

function clicker(model) {
  var partial_arg = view(model[/* clicker */0]);
  return (function (param) {
      return RealmNoUpdate.map((function (model) {
                    return model[/* clicker */0];
                  }), (function (model, clickerModel) {
                    return /* record */[
                            /* clicker */clickerModel,
                            /* toggler */model[/* toggler */1]
                          ];
                  }), partial_arg, param);
    });
}

function toggler(greeting, model) {
  var partial_arg = view$1(greeting, model[/* toggler */1]);
  return (function (param) {
      return RealmNoUpdate.map((function (model) {
                    return model[/* toggler */1];
                  }), (function (model, togglerModel) {
                    return /* record */[
                            /* clicker */model[/* clicker */0],
                            /* toggler */togglerModel
                          ];
                  }), partial_arg, param);
    });
}

var Components = /* module */[
  /* clicker */clicker,
  /* toggler */toggler
];

function view$2(greeting, model) {
  return Curry._4(Html$2[/* div */7], undefined, undefined, undefined, /* :: */[
              clicker(model),
              /* :: */[
                toggler(greeting, model),
                /* [] */0
              ]
            ]);
}

function mount(at) {
  return RealmNoUpdate.mountHtml(at)(init$2, (function (param) {
                return view$2("hello", param);
              }));
}

exports.Clicker = Clicker;
exports.Toggler = Toggler;
exports.init = init$2;
exports.Html = Html$2;
exports.Components = Components;
exports.view = view$2;
exports.mount = mount;
/* click Not a pure module */
