// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Realm = require("../src/Realm.bs.js");

function init(param) {
  return /* record */[/* count */0];
}

var click = /* SetState */[(function (model) {
      return /* record */[/* count */model[/* count */0] + 1 | 0];
    })];

var Html = Realm.NoUpdate[/* Html */3](/* module */[]);

function view(model) {
  var message = "You've clicked this " + (String(model[/* count */0]) + " times(s)");
  return Curry._2(Html[/* div */4], /* [] */0, /* :: */[
              Curry._2(Html[/* button */5], /* :: */[
                    Curry._1(Html[/* onClick */0], click),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html[/* text */3], message),
                    /* [] */0
                  ]),
              /* [] */0
            ]);
}

var Clicker = /* module */[
  /* init */init,
  /* click */click,
  /* Html */Html,
  /* view */view
];

function init$1(param) {
  return /* record */[/* show */true];
}

var toggle = /* SetState */[(function (model) {
      return /* record */[/* show */!model[/* show */0]];
    })];

var Html$1 = Realm.NoUpdate[/* Html */3](/* module */[]);

function view$1(greeting, model) {
  var match = model[/* show */0];
  return Curry._2(Html$1[/* div */4], /* [] */0, /* :: */[
              Curry._2(Html$1[/* button */5], /* :: */[
                    Curry._1(Html$1[/* onClick */0], toggle),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html$1[/* text */3], "Toggle greeting"),
                    /* [] */0
                  ]),
              /* :: */[
                match ? Curry._1(Html$1[/* text */3], greeting) : Html$1[/* null */2],
                /* [] */0
              ]
            ]);
}

var Toggler = /* module */[
  /* init */init$1,
  /* toggle */toggle,
  /* Html */Html$1,
  /* view */view$1
];

function init$2(param) {
  return /* record */[
          /* clicker : record */[/* count */0],
          /* toggler : record */[/* show */true]
        ];
}

var Html$2 = Realm.NoUpdate[/* Html */3](/* module */[]);

function view$2(greeting, model) {
  var partial_arg = view(model[/* clicker */0]);
  var partial_arg$1 = Realm.NoUpdate[/* map */1];
  var partial_arg$2 = view$1(greeting, model[/* toggler */1]);
  var partial_arg$3 = Realm.NoUpdate[/* map */1];
  return Curry._2(Html$2[/* div */4], /* [] */0, /* :: */[
              (function (param) {
                  return partial_arg$1((function (model) {
                                return model[/* clicker */0];
                              }), (function (clickerModel, model) {
                                return /* record */[
                                        /* clicker */clickerModel,
                                        /* toggler */model[/* toggler */1]
                                      ];
                              }), partial_arg, param);
                }),
              /* :: */[
                (function (param) {
                    return partial_arg$3((function (model) {
                                  return model[/* toggler */1];
                                }), (function (togglerModel, model) {
                                  return /* record */[
                                          /* clicker */model[/* clicker */0],
                                          /* toggler */togglerModel
                                        ];
                                }), partial_arg$2, param);
                  }),
                /* [] */0
              ]
            ]);
}

function mount(at) {
  return Realm.NoUpdate[/* mountHtml */2](at)(init$2, (function (param) {
                return view$2("hello", param);
              }));
}

exports.Clicker = Clicker;
exports.Toggler = Toggler;
exports.init = init$2;
exports.Html = Html$2;
exports.view = view$2;
exports.mount = mount;
/* Html Not a pure module */
