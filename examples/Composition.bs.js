// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Realm = require("../src/Realm.bs.js");

function init() {
  return /* record */[/* count */0];
}

function update(_, model) {
  return /* record */[/* count */model[/* count */0] + 1 | 0];
}

var Html = Curry._1(Realm.App[/* Html */0], /* module */[]);

function view(model) {
  var message = "You've clicked this " + (String(model[/* count */0]) + " times(s)");
  return Curry._2(Html[/* div */3], /* [] */0, /* :: */[
              Curry._2(Html[/* button */4], /* :: */[
                    Curry._1(Html[/* onClick */0], /* Click */0),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html[/* text */2], message),
                    /* [] */0
                  ]),
              /* [] */0
            ]);
}

var Clicker = /* module */[
  /* init */init,
  /* update */update,
  /* Html */Html,
  /* view */view
];

function init$1() {
  return /* record */[/* show */true];
}

function update$1(_, model) {
  return /* record */[/* show */!model[/* show */0]];
}

var Html$1 = Curry._1(Realm.App[/* Html */0], /* module */[]);

function view$1(greeting, model) {
  var match = model[/* show */0];
  return Curry._2(Html$1[/* div */3], /* [] */0, /* :: */[
              Curry._2(Html$1[/* button */4], /* :: */[
                    Curry._1(Html$1[/* onClick */0], /* Toggle */0),
                    /* [] */0
                  ], /* :: */[
                    Curry._1(Html$1[/* text */2], "Toggle greeting"),
                    /* [] */0
                  ]),
              /* :: */[
                match ? Curry._1(Html$1[/* text */2], greeting) : Html$1[/* null */1],
                /* [] */0
              ]
            ]);
}

var Toggler = /* module */[
  /* init */init$1,
  /* update */update$1,
  /* Html */Html$1,
  /* view */view$1
];

function init$2() {
  return /* record */[
          /* clicker : record */[/* count */0],
          /* toggler : record */[/* show */true]
        ];
}

function update$2(msg, model) {
  if (msg.tag) {
    return /* record */[
            /* clicker */model[/* clicker */0],
            /* toggler : record */[/* show */!model[/* toggler */1][/* show */0]]
          ];
  } else {
    return /* record */[
            /* clicker */update(msg[0], model[/* clicker */0]),
            /* toggler */model[/* toggler */1]
          ];
  }
}

var Html$2 = Curry._1(Realm.App[/* Html */0], /* module */[]);

function view$2(greeting, model) {
  var partial_arg = view(model[/* clicker */0]);
  var partial_arg$1 = Realm.App[/* map */2];
  var partial_arg$2 = view$1(greeting, model[/* toggler */1]);
  var partial_arg$3 = Realm.App[/* map */2];
  return Curry._2(Html$2[/* div */3], /* [] */0, /* :: */[
              (function (param) {
                  return partial_arg$1((function (msg) {
                                return /* ClickerMsg */Block.__(0, [msg]);
                              }), partial_arg, param);
                }),
              /* :: */[
                (function (param) {
                    return partial_arg$3((function (msg) {
                                  return /* TogglerMsg */Block.__(1, [msg]);
                                }), partial_arg$2, param);
                  }),
                /* [] */0
              ]
            ]);
}

function mount(at) {
  return Realm.App[/* mount */1](at, init$2, update$2, (function (param) {
                return view$2("hello", param);
              }));
}

exports.Clicker = Clicker;
exports.Toggler = Toggler;
exports.init = init$2;
exports.update = update$2;
exports.Html = Html$2;
exports.view = view$2;
exports.mount = mount;
/* Html Not a pure module */
